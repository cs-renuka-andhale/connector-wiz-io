{
  "name": "wiz-io",
  "version": "1.0.0",
  "label": "Wiz.io",
  "description": "Wiz provides a comprehensive analysis engine that integrates: Cloud Security Posture Management (CSPM) Kubernetes Security Posture Management (KSPM) Cloud Workload Protection (CWPP) + vulnerability management. Infrastructure-as-Code (IaC) scanning.",
  "publisher": "Fortinet",
  "cs_approved": true,
  "cs_compatible": true,
  "icon_small_name": "small.png",
  "icon_large_name": "large.png",
  "category": [
    "Asset Management",
    "Attack surface management",
    "Cloud Security"
  ],
  "help_online": "https://docs.fortinet.com/document/fortisoar/1.0.0/wiz-io/771/wiz-io-v1-0-0",
  "configuration": {
    "fields": [
      {
        "title": "API Endpoint URL",
        "type": "url",
        "name": "aPIEndpointURL",
        "required": true,
        "visible": true,
        "editable": true,
        "value": "https://api.us1.app.wiz.io",
        "tooltip": "Provide the API endpoint URL for the GraphQL API. The format is as follow: https://api.<location>.app.wiz.io\nThe \"location\" value and the URL can be retrieved from the WIZ tenant settings.",
        "description": "Specify the URL of the Wiz.io server to connect and perform automated operations. Provide the API endpoint URL for the GraphQL API. The format is as follow: https://api.your-server-location-here.app.wiz.io"
      },
      {
        "title": "Client ID",
        "type": "text",
        "name": "clientID",
        "required": true,
        "visible": true,
        "editable": true,
        "value": "",
        "tooltip": "Provide the API Client ID generated in the service account of the WIZ deployment.",
        "description": "Specify the API Client ID generated in the service account of the WIZ deployment to access the Wiz.io server to connect and perform the automated operations."
      },
      {
        "title": "Client Secret",
        "type": "password",
        "name": "clientSecret",
        "required": true,
        "visible": true,
        "editable": true,
        "value": null,
        "tooltip": "Provide the API Client Secret generated in the service account of the WIZ deployment.",
        "description": "Specify the API Client Secret generated in the service account of the WIZ deployment to access the Wiz.io server to connect and perform the automated operations."
      },
      {
        "title": "Authentication Endpoint URL",
        "type": "url",
        "name": "authenticationEndpointURL",
        "required": false,
        "visible": true,
        "editable": true,
        "value": "https://auth.app.wiz.io/oauth/token",
        "tooltip": "URL which is used to retrieve OAuth Token from. The URL can be found at the Service Account page.",
        "description": "Specify the URL from which to retrieve OAuth token. The URL can be found at the Service Account page of the Wiz.io server."
      },
      {
        "title": "Verify SSL",
        "required": false,
        "editable": true,
        "visible": true,
        "type": "checkbox",
        "name": "verify_ssl",
        "value": true,
        "description": "Specifies whether the SSL certificate for the server is to be verified. By default, this option is set to True. ",
        "tooltip": "Specifies whether the SSL certificate for the server is to be verified or not. By default, this option is set as True."
      }
    ]
  },
  "operations": [
    {
      "title": "Get Issues",
      "operation": "get_issues",
      "description": "Get issues for all assets from Wiz.io based on the filter query and maximum results limit that you have specified.",
      "annotation": "get_issues",
      "category": "investigation",
      "output_schema": {
        "data": {
          "issues": {
            "totalCount": "",
            "pageInfo": {
              "hasNextPage": "",
              "endCursor": ""
            },
            "nodes": [
              {
                "id": "",
                "severity": "",
                "status": "",
                "entity": {
                  "id": "",
                  "name": "",
                  "type": ""
                },
                "control": {
                  "name": ""
                }
              }
            ]
          }
        }
      },
      "parameters": [
        {
          "title": "Filter Query",
          "type": "object",
          "name": "filterQuery",
          "required": true,
          "visible": true,
          "editable": true,
          "value": null,
          "tooltip": "Using json syntax to define a query for the results.",
          "description": "Specify the filter query to fetch the issues from Wiz. For example: { \"severity\": [\"CRITICAL\"]}"
        },
        {
          "title": "Limit",
          "type": "integer",
          "name": "limit",
          "required": true,
          "visible": true,
          "editable": true,
          "value": 100,
          "tooltip": "Limit the results by the amount provided. Will automatically enable pagination.",
          "description": "Specify the maximum number of results to be returned in response."
        }
      ],
      "open": false
    },
    {
      "title": "Get Inventory Assets",
      "operation": "get_inventory_assets",
      "description": "Get inventory assets from Wiz.io platform based on the Project ID and other filter criteria that you have specified.",
      "annotation": "get_inventory_assets",
      "category": "investigation",
      "output_schema": {
        "data": {
          "graphSearch": {
            "totalCount": "",
            "pageInfo": {
              "endCursor": "",
              "hasNextPage": ""
            },
            "nodes": [
              {
                "entities": [
                  {
                    "id": "",
                    "name": "",
                    "properties": {
                      "_productIDs": [],
                      "_vertexID": "",
                      "accessibleFrom.internet": "",
                      "cloudPlatform": "",
                      "cloudProviderURL": "",
                      "creationDate": "",
                      "externalId": "",
                      "hasAdminPrivileges": "",
                      "hasHighPrivileges": "",
                      "hasSensitiveData": "",
                      "isContainerHost": "",
                      "isEphemeral": "",
                      "isManaged": "",
                      "memoryGB": "",
                      "name": "",
                      "nativeType": "",
                      "numAddressesOpenForHTTP": "",
                      "numAddressesOpenForHTTPS": "",
                      "numAddressesOpenForNonStandardPorts": "",
                      "numAddressesOpenForRDP": "",
                      "numAddressesOpenForSSH": "",
                      "numAddressesOpenForWINRM": "",
                      "openToAllInternet": "",
                      "openToEntireInternet": "",
                      "operatingSystem": "",
                      "passwordAuthDisabled": "",
                      "providerUniqueId": "",
                      "region": "",
                      "regionLocation": "",
                      "resourceGroupExternalId": "",
                      "status": "",
                      "subscriptionExternalId": "",
                      "tags": {
                        "Name": ""
                      },
                      "totalDisks": "",
                      "updatedAt": "",
                      "vCPUs": "",
                      "zone": ""
                    },
                    "type": "",
                    "technologies": [
                      {
                        "name": "",
                        "risk": "",
                        "usage": "",
                        "status": ""
                      }
                    ]
                  }
                ]
              }
            ]
          }
        }
      },
      "parameters": [
        {
          "title": "Filter Query",
          "type": "object",
          "name": "filterQuery",
          "required": true,
          "visible": true,
          "editable": true,
          "value": null,
          "tooltip": "Provide a Query which filters for the necessary asset like a VM on AWS, etc.",
          "description": "Specify the filter query to fetch the inventory assets from Wiz. For example: { \"type\": [\"VIRTUAL_MACHINE\"]}"
        },
        {
          "title": "Project ID",
          "type": "text",
          "name": "projectID",
          "required": false,
          "visible": true,
          "editable": true,
          "value": "*",
          "tooltip": "Provide a project id from which the assets should be gathered. Keep the wildcard to allow all projects to be included.",
          "description": "Specify the project ID whose associated inventory assets are to be retrieved."
        },
        {
          "title": "Limit",
          "type": "integer",
          "name": "limit",
          "required": false,
          "visible": true,
          "editable": true,
          "value": 10,
          "tooltip": "Limit the results by the amount provided. Will automatically enable pagination.",
          "description": "Specify the maximum number of results to be returned in response."
        }
      ],
      "open": false
    },
    {
      "title": "Get Issues for Asset",
      "operation": "get_issues_by_asset",
      "description": "Get issues for all assets from Wiz.io based on the Asset ID, Project ID, Status, and other filter criteria that you have specified.",
      "annotation": "get_issues_by_asset",
      "category": "investigation",
      "output_schema": {
        "data": {
          "issuesGroupedByValue": {
            "nodes": [
              {
                "id": "",
                "issues": {
                  "nodes": [
                    {
                      "id": "",
                      "type": "",
                      "control": {
                        "id": "",
                        "name": "",
                        "description": "",
                        "severity": "",
                        "type": "",
                        "query": {
                          "as": "",
                          "relationships": [
                            {
                              "negate": "",
                              "type": [
                                {
                                  "type": ""
                                }
                              ],
                              "with": {
                                "relationships": [
                                  {
                                    "type": [
                                      {
                                        "type": ""
                                      }
                                    ],
                                    "with": {
                                      "type": [
                                        ""
                                      ],
                                      "where": {
                                        "categories": {
                                          "EQUALS": []
                                        }
                                      }
                                    }
                                  }
                                ],
                                "type": []
                              }
                            }
                          ],
                          "select": "",
                          "type": [],
                          "where": {
                            "cloudPlatform": {
                              "EQUALS": []
                            }
                          }
                        },
                        "enabled": "",
                        "enabledForLBI": "",
                        "enabledForMBI": "",
                        "enabledForHBI": "",
                        "enabledForUnattributed": "",
                        "securitySubCategories": [
                          {
                            "id": "",
                            "category": {
                              "id": ""
                            }
                          }
                        ],
                        "sourceCloudConfigurationRule": "",
                        "createdBy": "",
                        "serviceTickets": ""
                      },
                      "sourceRule": {
                        "id": "",
                        "name": "",
                        "query": {
                          "as": "",
                          "relationships": [
                            {
                              "negate": "",
                              "type": [
                                {
                                  "type": ""
                                }
                              ],
                              "with": {
                                "relationships": [
                                  {
                                    "type": [
                                      {
                                        "type": ""
                                      }
                                    ],
                                    "with": {
                                      "type": [
                                        ""
                                      ],
                                      "where": {
                                        "categories": {
                                          "EQUALS": []
                                        }
                                      }
                                    }
                                  }
                                ],
                                "type": []
                              }
                            }
                          ],
                          "select": "",
                          "type": [],
                          "where": {
                            "cloudPlatform": {
                              "EQUALS": []
                            }
                          }
                        },
                        "type": "",
                        "enabled": "",
                        "enabledForHBI": "",
                        "enabledForLBI": "",
                        "enabledForMBI": "",
                        "enabledForUnattributed": "",
                        "resolutionRecommendation": "",
                        "controlDescription": "",
                        "securitySubCategories": [
                          {
                            "id": "",
                            "title": "",
                            "category": {
                              "id": "",
                              "name": "",
                              "framework": {
                                "id": "",
                                "name": "",
                                "description": "",
                                "enabled": ""
                              }
                            }
                          }
                        ]
                      },
                      "createdAt": "",
                      "updatedAt": "",
                      "projects": [
                        {
                          "id": "",
                          "name": "",
                          "slug": "",
                          "isFolder": "",
                          "businessUnit": "",
                          "riskProfile": {
                            "businessImpact": ""
                          }
                        }
                      ],
                      "status": "",
                      "severity": "",
                      "entity": {
                        "id": "",
                        "name": "",
                        "type": ""
                      },
                      "resolutionReason": "",
                      "entitySnapshot": {
                        "id": "",
                        "type": "",
                        "name": "",
                        "cloudPlatform": "",
                        "region": "",
                        "subscriptionName": "",
                        "subscriptionId": "",
                        "subscriptionExternalId": "",
                        "subscriptionTags": {},
                        "nativeType": "",
                        "kubernetesClusterId": "",
                        "kubernetesClusterName": "",
                        "kubernetesNamespaceName": "",
                        "containerServiceId": "",
                        "containerServiceName": "",
                        "tags": {
                          "Name": ""
                        }
                      },
                      "notes": [],
                      "serviceTickets": [],
                      "entityBasicDetails": {
                        "id": "",
                        "type": "",
                        "name": ""
                      },
                      "entityExtraDetails": {
                        "id": "",
                        "properties": {
                          "_productIDs": [],
                          "_vertexID": "",
                          "accessibleFrom.internet": "",
                          "cloudPlatform": "",
                          "cloudProviderURL": "",
                          "creationDate": "",
                          "externalId": "",
                          "hasAdminPrivileges": "",
                          "hasHighPrivileges": "",
                          "hasSensitiveData": "",
                          "isContainerHost": "",
                          "isEphemeral": "",
                          "isManaged": "",
                          "memoryGB": "",
                          "name": "",
                          "nativeType": "",
                          "numAddressesOpenForHTTP": "",
                          "numAddressesOpenForHTTPS": "",
                          "numAddressesOpenForNonStandardPorts": "",
                          "numAddressesOpenForRDP": "",
                          "numAddressesOpenForSSH": "",
                          "numAddressesOpenForWINRM": "",
                          "openToAllInternet": "",
                          "openToEntireInternet": "",
                          "operatingSystem": "",
                          "passwordAuthDisabled": "",
                          "providerUniqueId": "",
                          "region": "",
                          "regionLocation": "",
                          "resourceGroupExternalId": "",
                          "status": "",
                          "subscriptionExternalId": "",
                          "tags": {
                            "Name": ""
                          },
                          "totalDisks": "",
                          "updatedAt": "",
                          "vCPUs": "",
                          "zone": ""
                        },
                        "projects": [
                          {
                            "id": "",
                            "name": "",
                            "slug": "",
                            "isFolder": "",
                            "businessUnit": "",
                            "riskProfile": {
                              "businessImpact": ""
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "totalCount": "",
                  "criticalSeverityCount": "",
                  "highSeverityCount": "",
                  "mediumSeverityCount": "",
                  "lowSeverityCount": "",
                  "informationalSeverityCount": "",
                  "pageInfo": {
                    "hasNextPage": ""
                  }
                }
              }
            ],
            "pageInfo": {
              "hasNextPage": "",
              "endCursor": ""
            },
            "totalCount": ""
          }
        }
      },
      "parameters": [
        {
          "title": "Asset ID",
          "type": "text",
          "name": "assetID",
          "required": true,
          "visible": true,
          "editable": true,
          "value": "",
          "tooltip": "Provide the ID of an Asset Issues should retrieved for.",
          "description": "Specify the asset ID whose associated issues are to be retrieved."
        },
        {
          "title": "Project ID",
          "type": "text",
          "name": "projectID",
          "required": true,
          "visible": true,
          "editable": true,
          "value": "",
          "tooltip": "Filter Issues from specific projects according to the project ID.",
          "description": "Specify the project ID whose associated issues are to be retrieved."
        },
        {
          "title": "Status",
          "type": "text",
          "name": "status",
          "required": true,
          "visible": true,
          "editable": true,
          "value": "[\"OPEN\",\"IN_PROGRESS\"]",
          "tooltip": "Provide a list of issue status. Possible values are allowed: OPEN, RESOLVED, IN_PROGRESS & REJECTED.",
          "description": "Select the issue status associated with the specified asset and project ID. You can choose from the following options: Open , Resolved , In Progress  & Rejected."
        },
        {
          "title": "Limit",
          "type": "integer",
          "name": "limit",
          "required": false,
          "visible": true,
          "editable": true,
          "value": 10,
          "tooltip": "Limit the results by the amount provided. Will automatically enable pagination.",
          "description": "Specify the maximum number of results to be returned in response."
        }
      ],
      "open": false
    },
    {
      "title": "Get Projects",
      "operation": "get_projects",
      "description": "Get a list of projects based on the filter query and maximum results limit that you have specified.",
      "annotation": "get_projects",
      "category": "investigation",
      "output_schema": {
        "data": {
          "projects": {
            "pageInfo": {
              "hasNextPage": "",
              "endCursor": ""
            },
            "totalCount": "",
            "nodes": [
              {
                "id": "",
                "name": "",
                "slug": "",
                "isFolder": "",
                "childProjectCount": "",
                "cloudAccountCount": "",
                "repositoryCount": "",
                "kubernetesClusterCount": "",
                "containerRegistryCount": "",
                "securityScore": "",
                "archived": "",
                "businessUnit": "",
                "description": "",
                "workloadCount": "",
                "licensedWorkloadQuota": "",
                "riskProfile": {
                  "businessImpact": ""
                },
                "nestingLevel": "",
                "ancestorProjects": ""
              }
            ]
          }
        }
      },
      "parameters": [
        {
          "title": "Limit",
          "type": "integer",
          "name": "limit",
          "required": true,
          "visible": true,
          "editable": true,
          "value": 20,
          "tooltip": "Limit the results by the amount provided. Will automatically enable pagination.",
          "description": "Specify the maximum number of results to be returned in response."
        },
        {
          "title": "Filter Query",
          "type": "object",
          "name": "filterQuery",
          "required": false,
          "visible": true,
          "editable": true,
          "value": null,
          "tooltip": "Using json syntax to define a query for the results.",
          "description": "Specify the filter query to fetch projects from Wiz. For example: { \"id\": {\"equals\": \"d6ac50bb-aec0-52fc-80ab-bacd7b02f178\"}}"
        }
      ],
      "open": false
    },
    {
      "title": "Add Comment to Issue",
      "operation": "add_comment_to_issue",
      "description": "Add a comment to an existing issue within Wiz.io based on the issue ID and the comment that you have specified.",
      "annotation": "add_comment_to_issue",
      "category": "investigation",
      "output_schema": {
        "data": {
          "createIssueNote": {
            "issueNote": {
              "createdAt": "",
              "id": "",
              "text": "",
              "user": ""
            }
          }
        }
      },
      "parameters": [
        {
          "title": "Issue ID",
          "type": "text",
          "name": "issueID",
          "required": true,
          "visible": true,
          "editable": true,
          "value": "",
          "tooltip": "ID of the issue where a comment should be added.",
          "description": "Specify the issue ID for which the comment is to be added."
        },
        {
          "title": "Comment",
          "type": "textarea",
          "name": "comment",
          "required": true,
          "visible": true,
          "editable": true,
          "value": null,
          "tooltip": "Comment message to add to a issue.",
          "description": "Specify the comment to add to the issue."
        }
      ],
      "open": false
    }
  ]
}